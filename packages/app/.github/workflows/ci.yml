name: CI

on:
  push:
  pull_request:

defaults:
  run:
    working-directory: server
    # Service containers to run with `container-job`

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: example
          POSTGRES_USER: jefke
          POSTGRES_DB: csmm-payments
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    strategy:
      matrix:
        node-version: [14.x, 15.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run db:migrate
        env:
          SESSION_SECRET: "secret!"
          DATABASE_URL: "postgresql://jefke:example@127.0.0.1:5432/csmm-payments?schema=public"
      - run: npm run build
      - run: npm run lint
      - run: npm test
        env:
          SESSION_SECRET: "secret!"
          DATABASE_URL: "postgresql://jefke:example@127.0.0.1:5432/csmm-payments?schema=public"
          MOLLIE_API_KEY: ${{ secrets.MOLLIE_API_KEY }}
          PTERODACTYL_API_KEY: "whatever"
          PTERODACTYL_PANEL_URL: "some actual url"
